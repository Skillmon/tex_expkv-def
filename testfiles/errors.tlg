This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST 1: invalid choice
============================================================
! Undefined control sequence.
<argument> \! expkv-def Error: 
                               invalid choice `5' (`foo', set `test').
l. ...\TESTEXP{invalid choice}{\usekeys{foo=5}}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
============================================================
============================================================
TEST 2: invalid definitions
============================================================
! expkv-def Error: Missing definition for key `code key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
This error message was generated by an \errmessage
command, so I can't give any explicit help.
Pretend that you're Hercule Poirot: Examine all clues,
and deduce the truth by order and method.
! expkv-def Error: Missing definition for key `noval key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Undefined key `key' found while processing `default key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `default foo'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Undefined key `key' found while processing `initial key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `initial foo'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `bool key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `store key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `data key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `int key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `dimen key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `skip key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `toks key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `box key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `meta key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! Illegal parameter number in definition of \ekvd@tmp.
<to be read again> 
                   1
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! expkv-def Error: Missing definition for key `smeta key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `smeta key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `smeta key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! Illegal parameter number in definition of \ekvd@tmp.
<to be read again> 
                   1
l. ...  }
You meant to type ## instead of #, right?
Or maybe a } was forgotten somewhere earlier, and things
are all screwed up? I'm going to assume that you meant ##.
! expkv-def Error: Missing definition for key `choice key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing type prefix for key `key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing type prefix for key `long key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing type prefix for key `protected key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing type prefix for key `long protected key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Undefined prefix `undefined' found while processing `undefined key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `boolpair key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: Missing definition for key `boolpair key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
============================================================
============================================================
TEST 3: invalid prefixes
============================================================
! expkv-def Error: prefix `long' not accepted in `long noval foo'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `long' not accepted in `long default foo'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `long' not accepted in `long initial foo'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! Undefined control sequence.
<argument> \! expkv-def Error: 
                               invalid choice `' (`foo', set `test').
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! expkv-def Error: prefix `protected' not accepted in `protected initial foo'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! Undefined control sequence.
<argument> \! expkv-def Error: 
                               invalid choice `' (`foo', set `test').
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! expkv-def Error: prefix `long' not accepted in `long protected initial foo'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `protected' not accepted in `long protected initial foo'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! Undefined control sequence.
<argument> \! expkv-def Error: 
                               invalid choice `' (`foo', set `test').
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
! expkv-def Error: prefix `long' not accepted in `long bool key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `long' not accepted in `long nmeta key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `long' not accepted in `long snmeta key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `long' not accepted in `long set key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `protected' not accepted in `protected set key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `long' not accepted in `long protected set key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `protected' not accepted in `long protected set key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `long' not accepted in `long choice key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
! expkv-def Error: prefix `long' not accepted in `long boolpair key'.
\ekvd@errm #1->\errmessage {expkv-def Error: #1}
l. ...  }
(That was another \errmessage.)
============================================================
